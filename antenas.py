# -*- coding: utf-8 -*-
"""Antenas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WuE2hpd3L5hywD-xR77O0NL4Vz3GzwBO

# **PROYECTO FINAL: ANÁLISIS NUMÉRICO DEL DISEÑO DE ANTENAS**

**Nombre:**
José Gabriel Castillo Flores (00322044)

**Fecha:**
5/Mayo/2025

**Curso:**
IEE - 4003 - Ondas Electromagnéticas + LAB (NRC: 3222)
"""

import numpy as np
import pandas as pd
import scipy.integrate as integrate
from scipy.special import jn
import matplotlib.pyplot as plt

"""# **Antena log-periódica**

Un arreglo periódico logarítmico alimentado por dos cables viene definida en base a la disposición geométrica del espacio, en particular, por las longitudes y separaciones de las bandas.

Su comportamiento puede describirse mediante las siguientes fórmulas de recursión.
\begin{equation}
    L_{i+1}=\tau L_{i},
\end{equation}

\begin{equation}
    R_{i+1}=\tau R_i,
\end{equation}

\begin{equation}
    \sigma=\frac{\Delta R_i}{2L_{i-1}}.
\end{equation}
En este caso, los parámetros $\tau$ y $\sigma$ presentes en las expresiones 1, 2 y 3, corresponden a la constante de periodicidad y el espacimiento relativo, respectivamente.

Ahora, la ganancia del arreglo dipolar log-periódico, LPDA, viene dada como una función bidimensional $G:[0,1]\times R^+\longrightarrow R^+$, en virtud de los parámetros $\tau$ y $\sigma$. Dicha función $G$ describe una familia de curvas.
El resto de parámetros se definen en términos del ancho de banda, las frecuencias de operación $f_1$ y $f_2$, y la velocidad de fase $v_p$. De esta forma, se introducen
*  el ancho de banda relativo $B$
    \begin{equation}
        B=\frac{f_2}{f_1},
    \end{equation}

* el ancho de banda de la región activa $B_{ar}$
    \begin{equation}
        B_{ar}=1.1+7.7(1-\tau)^2\frac{4\sigma}{1-\tau},
    \end{equation}
* el ancho de banda estructurado $B_s$
    \begin{equation}
        B_s=BB_{ar},
    \end{equation}
* el número de elementos dipolares $N$
    \begin{align}
        N=\left\lceil1+\displaystyle\frac{\log B_s}{\log \displaystyle\frac{1}{\tau}}\right\rceil.
    \end{align}

Finalmente, la definición de la recursión puede definirse completamente al incluir los términos iniciales.
\begin{equation}
    L_1=\frac{v_p}{2f_1},
\end{equation}
\begin{equation*}
    R_1-R_2=\frac{L_1-L_2}{2}\left(\frac{4\sigma}{1-\tau}\right).
\end{equation*}
La distancia desde el elemento más largo a la alimentación de la antena $L_S$ puede computarse mediante la expresión.
\begin{equation}
    L_S=\frac{L_1}{4}.
\end{equation}
"""

def Li(L1,τ,n):
  L=np.zeros(n)
  for i in range(n):
    Li=L1*τ**i
    L[i]=Li
  return L
def ΔRi(L,τ,σ):
  ΔR=np.zeros(len(L))
  for i in range(len(L)-1):
    ΔRi=(L[i]-L[i+1])/2*((4*σ)/(1-τ))
    ΔR[i]=ΔRi
  return ΔR

def AntLog(τ,σ,f1,f2,vp):
  c=3*10**8
  B=f2/f1
  Bar=1.1+7.7*(1-τ)**2*((4*σ)/(1-τ))
  Bs=B*Bar
  N=np.floor(1+np.log10(Bs)/np.log10(1/τ))
  L1=1/2*(vp*c/f1)
  LS=L1/4
  L=Li(L1,τ,round(N))
  ΔR=ΔRi(L,τ,σ)
  Iter=[]
  for i in range(len(L)):
    Iter.append(i+1)
    L[i]=round(L[i]*10**3,2)
    ΔR[i]=round(ΔR[i]*10**3,2)
  data={"Elemento (i)":Iter,
        "Li [mm]": L,
        "Ri [mm]": ΔR}
  df=pd.DataFrame(data)
  return B,Bar,Bs,N,LS,df
def AntLogDecrip(τ,σ,f1,f2,vp):
  AL=AntLog(τ,σ,f1,f2,vp)
  print('B= ', round(AL[0],4))
  print('Bar= ',round(AL[1],4))
  print('Bs= ',round(AL[2],4))
  print('N= ',round(AL[3]))
  print('LS= ',round(AL[4]*10**3,2),'mm')
  print(AL[5])

AntLogDecrip(0.965,0.185,2500*10**6,3700*10**6,2/3)#Ejemplo de aplicación

"""# **Antena microlínea**

**Antena de microlínea rectangular**

En una antena de microlínea, los arreglos rectangulares se definen en base a tres parámetros geométricos y uno intrínseco del material, el largo $L$, el ancho $W$, la altura $h$ y la constante dieléctrica relativa $\varepsilon_r$.

Para antenas de frecuencia baja, la constante dieléctrica efectiva $\varepsilon_{reff}$ es esencial para determinar las dimensiones de la antena
\begin{equation}
    \varepsilon_{reff}=\frac{\varepsilon_r+1}{2}+\frac{\varepsilon_r-1}{2}\left(1+\frac{12h}{W}\right)^{-\frac{1}{2}}.
\end{equation}
A partir de este último parámetro es posible obtener la variación de longitud del parche $\Delta L$
\begin{equation}
    \Delta L=0.412h\frac{(\varepsilon_{reff}+0.3)\left(\displaystyle\frac{W}{h}+0.264\right)}{(\varepsilon_{reff}-0.258)\left(\displaystyle\frac{W}{h}+0.8\right)}.
\end{equation}
Algunas veces el ancho y el largo pueden determinarse al considerar la frecuencia de resonancia $f_r$ y las ecuaciones anteriores.
\begin{equation}
    W=\frac{c}{2f_r}\sqrt{\frac{2}{\varepsilon_r+1}},
\end{equation}
\begin{equation}
    L=\frac{c}{2f_r\sqrt{\varepsilon_{reff}}}-2\Delta L.
\end{equation}
La longitud efectiva $L_{eff}$ alude a la distancia equivalente a $\frac{\lambda}{2}$ para el modo de resonancia electromagnética $TM010$ que se describe dentro de una cavidad cilíndrica sin franjas y viene dada por
\begin{equation}
    L_{eff}=L+2\Delta L.
\end{equation}
"""

def Rmstrip(εr,fr,h):
  c=3*10**8#Velocidad de la luz
  w=c/(2*fr)*np.sqrt(2/(εr+1))
  εreff=(εr+1)/2+(εr-1)/2*(1+12*(h/w))**(-1/2)
  ΔL=0.412*((εreff+0.3)*(w/h+0.264))/((εreff-0.258)*(w/h+0.8))*h
  L=c/(2*fr*np.sqrt(εreff))-2*ΔL
  Le=L+2*ΔL
  return w, εreff, ΔL, L, Le
def RmstripDescrip(εr,fr,h):
  MSt=Rmstrip(εr,fr,h)
  print('W= ',round(MSt[0]*10**2,3),' cm')#Ancho
  print('εreff= ',round(MSt[1],3))#Constante dieléctrica efectiva
  print('ΔL= ',round(MSt[2]*10**2,3),' cm')#Extensión de la distancia
  print('L= ',round(MSt[3]*10**2,3),' cm')#Distancia
  print('Le=',round(MSt[4]*10**2,3),'cm')#Distancia efectiva

RmstripDescrip(2.2,10*10**9,0.1588*10**(-2))#Ejemplo de aplicación

"""**Frecuencias de resonancia**

Si se considera un entorno tridimensional y los parámetros $m,n,p$ representan el número de variaciones de campo de semiciclos en las direcciones de $x$, $y$ y $z$, respectivamente, entonces las frecuencias de resonancia de la cavidad se calculan por
\begin{equation}
    (fr)_{mnp}=\frac{1}{2\pi\sqrt{\mu\epsilon}}\sqrt{\left(\frac{m\pi}{h}\right)^2+\left(\frac{n\pi}{L}\right)^2+\left(\frac{p\pi}{W}\right)^2}.
\end{equation}
"""

def Amnp(m,n,p,h,L,w):
    Amnp=((m*np.pi/h)**2+(n*np.pi/L)**2+(p*np.pi/w)**2)**(1/2)
    return Amnp
def fr(m,n,p,h,L,w,εr):
    ε0=8.854*10**(-12)#Permitividad del vacío (F/m)
    μ0=4*10**(-7)*np.pi# Permeabilidad del vacío (H/m)
    fr=1/(2*np.pi*np.sqrt(εr)*np.sqrt(μ0*ε0))*Amnp(m,n,p,h,L,w)
    return fr
def frDM(w,εr,L,h):#L>w>L/2>h
    ε0=8.854*10**(-12)#Permitividad del vacío (F/m)
    μ0=4*10**(-7)*np.pi# Permeabilidad del vacío (H/m)
    MSt=Rmstrip(εr,1,h)
    fr010=fr(0,1,0,h,L,w,εr)
    frc010=1/(2*MSt[4]* np.sqrt(MSt[1]) * np.sqrt(μ0*ε0))
    fr001=fr(0,0,1,h,L,w,εr)
    fr020=fr(0,2,0,h,L,w,εr)
    return fr010,frc010,fr001,fr020
def frDMDescrip(w,εr,L,h):
    DM=frDM(w,εr,L,h)
    print('fr010=',round(DM[0]*10**(-9),3),'GHz')#Frecuencia resonante MT010 sin flecos
    print('frc010=',round(DM[1],3),'GHz')#Frecuencia resonante MT010 con flecos
    print('fr001=',round(DM[2]*10**(-9),3),'GHz')#Frecuencia resonante MT001 sin flecos
    print('fr020=',round(DM[3]*10**(-9),3),'GHz')#Frecuencia resonante MT020 sin flecos

frDMDescrip(0.028,2.2,0.03,0.01)#Ejemplo de aplicación

"""**Conductancias y susceptancias**

Adicionalmente, se introduce el concepto de conductividad puesto que cada ranura de radiación puede ser representada por una admitancia equivalente en parelelo $Y=G+jB$. Para describir la conductividad $G$ y susceptancia $B$, se precisa la longitud y número de onda al considerar una propagación en el vacío, es decir, $\lambda_0$ y $k_0$. De esta forma, la conductividad de ranura puede computarse como
\begin{equation}
    G_1=\frac{I_1}{120\pi^2}\approx \frac{W}{120\lambda_0}\left(1-\frac{(k_0h)^2}{24}\right),
\end{equation}
donde
\begin{equation}
    I_1=-2+\cos(k_0W)+k_0W\text{Si} (k_0W)+\frac{\sin(k_0W)}{k_0W}
\end{equation}
y la función Si corresponde a la integral senoidal definida por la integración del seno cardinal cuya expresión matemática es
\begin{equation}
    \text{Si}(x)=\int_{0}^x\frac{\sin t}{t}dt.
\end{equation}
Para la susceptancia de ranura, se tiene la expresión
\begin{equation}
    B_1=\frac{W}{120\lambda_0}(1-0.636\ln(k_0h)).
\end{equation}
Ahora, cuando se considera dos ranuras contiguos, aparece la conductancia mutua que viene dada mediante la integral
\begin{equation}
    G_{12}=\frac{1}{120\pi^2}\int_0^\pi\left(\frac{\sin\left(\displaystyle\frac{k_0W}{2}\cos\theta\right)}{\cos\theta}\right)^2J_0(k_0L\sin\theta)\sin^3\theta d\theta,
\end{equation}
donde $J_0$ es la función de Bessel del primer tipo de orden nulo. En general, al aplicar el método de Frobenius, se obtiene que la función de Bessel del primer tipo de orden $n$-ésimo está definida por la serie infinita
\begin{equation}
    J_n(x)=\sum_{k=0}^{\infty}\frac{(-1)^k}{k!(k+n)!}\left(\frac{x}{2}\right)^{2k+n}.
\end{equation}
En este mismo contexto, se puede calcular la impedancia característica de la alimentación de la microlínea  requerida para conectar el parche de la antena mediante la expresión
\begin{equation}
    Z_c=
    \begin{cases}
    \displaystyle\frac{60}{\sqrt{\varepsilon_{reff}}}\ln\left(\frac{8h}{W_0}+\frac{W_0}{4h}\right),&\displaystyle\frac{W_0}{h}\leq1\\
    \\
    \displaystyle\frac{120\pi}{\sqrt{\varepsilon_{reff}}\left(\displaystyle\frac{W_0}{h}+1.393+0.667\ln\left(\frac{W_0}{h}+1.444\right)\right)},&\displaystyle\frac{W_0}{h}>1
    \end{cases}.
\end{equation}
La resistencia de entrada depende de la configuración y simetría de la antena, se toma signo positivo para una simetría impar y signo negativo para una simetría par, la cual varía en función de la distancia $y$. En particular, para $y=y_0$ y considerar acople, se verifica que
\begin{equation}
    R_{in}=\frac{1}{2(G_1\pm G_{12})}\cos^2\left(\frac{\pi}{L}y_0\right).
\end{equation}
"""

def kλ(fr):
    c=3*10**8
    λ0=c/fr
    k0=2*np.pi/λ0
    return λ0,k0
def condsucep(w,L,h,εr,fr,FD,y0,w0):
    kλ0=kλ(fr)
    λ0=kλ0[0]
    k0=kλ0[1]
    f=lambda x: np.sin(x)/x
    Si=integrate.quad(f,0,k0*w)
    I1=-2+np.cos(k0*w)+k0*w*Si[0]+np.sin(k0*w)/(k0*w)#Integral sinoidal
    G1=I1/(120*np.pi**2)
    G1a= (w/(120*λ0))*(1-(1/24)*(k0*h)**2)
    B1a=(w/(120*λ0))*(1-0.636*np.log(k0*h))
    g=lambda x: 1/(120*np.pi**2)*(np.sin(k0*w/2*np.cos(x))/np.cos(x))**2*jn(0,k0*L*np.sin(x))*np.sin(x)**3#Integral con funciones de Bessel del primer tipo
    G12=integrate.quad(g,0,np.pi)
    Rin0=0
    Rin=0
    MSt=Rmstrip(εr,fr,h)
    if (FD==0 or FD==1):#0 antisimétrico, 1 simétrico
          Rin0=1/(2*(G1+(-1)**FD*G12[0]))
          Rin=Rin0*np.cos(np.pi/L*y0)**2
    if (w0/h<=1):
      Zc=60/np.sqrt(MSt[1])*np.log((8*h)/w0+w0/(4*h))#Impedancia característica
    else:
      Zc=120*np.pi/(np.sqrt(MSt[1])*(w0/h+1.393+0.667*np.log(w0/h+1.444)))
    return G1, G1a, G12[0], Rin0, Rin, Zc, B1a, I1
def condsucepDescrip(w,L,h,εr,fr,FD,y0,w0):
    GB=condsucep(w,L,h,εr,fr,FD,y0,w0)
    print('G1= ',round(GB[0],5), 'S')#Conductividad de ranura
    print('G1a= ',round(GB[1],5),'S')#Conductividad de ranura aproximada
    print('G12= ',round(GB[2],8), 'S')#Conductancia mutua
    if (FD==0 or FD==1):#0 antisimétrico, 1 simétrico
      print('Rin0= ', round(GB[3],4), 'Ω')#Resistencia de entrada a la distancia y=0
      print('Rin= ',round(GB[4]),'Ω')#Resistencia de entrada a la distancia y=y0
    else:
      print('Tipo de resonancia no especificada')
    print('Zc= ',round(GB[5],2),'Ω')
    print('B1= ',round(GB[6],5), 'S')#Suceptancia de ranura aproximada

condsucepDescrip(1.186*10**(-2),0.906*10**(-2),0.1588*10**(-2),2.2,10*10**9,0,0.3126*10**(-2),0.31*10**(-2))#Ejemplo de aplicación

"""**Directividad**

Uno de los indicadores de eficiencia que caracteriza cualquier tipo corresponde a al directividad. Al tomar el factor de arreglo y la conductancia mutua normalizada $g_{12}$ obtenida mediante el cociente entre $G_{12}$ y $G_1$, la directividad se define como
\begin{equation}
    D_{AF}=\frac{2}{1+g_{12}}
\end{equation}
Para una ranura simple, dicho indicador viene dado por
\begin{equation}
    D_0=\left(\frac{2\pi W}{\lambda_0}\right)^2\frac{1}{I_1}.
\end{equation}
Para dos ranuras o lateral, la directividad puede obtenerse mediante la expresión
\begin{equation}
    D_2=\left(\frac{2\pi W}{\lambda_0}\right)^2\frac{1}{I_2}\approx D_0D_{AF},
\end{equation}
donde $I_2$ describe una integral doble
\begin{equation}
    I_2=\displaystyle\int_0^\pi\int_0^\pi\left(\frac{\sin\left(\displaystyle\frac{k_0W}{2}\cos\theta
    \right)}{\cos\theta}\right)^2\sin^3\theta\cos^2\left(\frac{k_0L_{eff}}{2}\sin\theta\cos\phi\right)d\theta d\phi.
\end{equation}
"""

def dB(arg):
    dB=10*np.log10(arg)
    return dB
def RectMStrip(w,L,h,εr,fr,FD,y0,w0,Le):
    kλ0=kλ(fr)
    λ0=kλ0[0]
    k0=kλ0[1]
    GB=condsucep(w,L,h,εr,fr,FD,y0,w0)
    h=lambda x,y: (np.sin(k0*w*np.cos(x)/2)/np.cos(x))**2*np.sin(x)**3*np.cos(k0*Le/2*np.sin(x)*np.sin(y))**2
    I2=integrate.dblquad(h,0,np.pi,0,np.pi)
    g12=GB[2]/GB[0]
    DAF=2/(1+g12)
    D0=(2*np.pi*w/λ0)**2*1/GB[7]
    D2a=D0*DAF
    D2=(2*np.pi*w/λ0)**2*np.pi/I2[0]
    return DAF,D0,D2a,D2
def RectMStripDescrip(w,L,h,εr,fr,FD,y0,w0,Le):
    RMSt=RectMStrip(w,L,h,εr,fr,FD,y0,w0,Le)
    print('DAF= ',round(RMSt[0],4),'= ',round(dB(RMSt[0]),4),'dB')#Directividad del factor de arreglo
    print('D0= ',round(RMSt[1],3),'= ',round(dB(RMSt[1]),3),'dB')#Directividad de ranura simple
    print('D2a= ',round(RMSt[2],4),'=',round(dB(RMSt[2]),4),'dB')#Directividad lateral aproximada
    print('D2= ',round(RMSt[3],4),'=',round(dB(RMSt[3]),3),'dB')#Directividad lateral

RectMStripDescrip(1.186*10**(-2),0.906*10**(-2),0.1588*10**(-2),2.2,10*10**9,0,0.3126*10**(-2),0.31*10**(-2),1.0575*10**(-2))#Ejemplo de aplicación

"""**Antena de microlínea circular**

Posteriormente, se aborda una antena de microlínea circular cuyo comportamiento se modela mediante el radio del parche $a$, la constante dieléctrica relativa del material $\varepsilon$ y la frecuencia de resonancia $f_r$.

De esta forma, el radio real $a$ del parche puede calcalarse mediante la siguiente expresión matemática
\begin{equation}
    a=\frac{F}{\sqrt{1+\displaystyle\frac{2h}{\pi\varepsilon_rF}\left(\ln\left(\frac{\pi F}{2h}\right)+1.7726\right)}},
\end{equation}
donde
\begin{equation}
    F=\frac{8.791\times10^9}{f_r\sqrt{\varepsilon_r}}.
\end{equation}
También puede definirse el radio efectivo $a_e$ como
\begin{equation}
    a_e=a\sqrt{1+\displaystyle\frac{2h}{\pi a\varepsilon_r}\left(\ln\left(\frac{\pi a}{2h}\right)+1.7726\right)}.
\end{equation}
En adición, los campos eléctrico y magnético en los principales planos polares pueden simplicarse al tomar el potencial eléctrico $V_0$ como

* **Plano-E** $(\phi=0,\pi,0\leq\theta\leq\frac{\pi}{2})$
    \begin{align}
        &E_{\theta}(r)=j\frac{k_0a_eV_0e^{-jk_0r}}{2r}[J'_{02}]\\
        &E_{\phi}(r)=0
    \end{align}
    donde
    \begin{equation}
        J'_{02}=J_0(k_0a_e\sin\theta)-J_2(k_0a_e\sin\theta).
    \end{equation}
* **Plano-H** $(\phi=\frac{\pi}{2},\frac{3\pi}{2},0\leq\theta\leq\frac{\pi}{2})$
    \begin{align}
        &E_{\theta}(r)=0\\
        &E_{\phi}(r)=j\frac{k_0a_eV_0e^{-jk_0r}}{2r}[\cos \theta J_{02}]
    \end{align}
    donde
    \begin{equation}
        J_{02}=J_0(k_0a_e\sin\theta)+J_2(k_0a_e\sin\theta).
    \end{equation}

Nótese que $J_0$ y $J_2$ hace referencia a las funciones de Bessel del primer tipo de orden nulo y segundo orden, respectivamente.
"""

def CircPatch(h,εr,fr):
  F=8.791*10**9/(fr*np.sqrt(2.2))
  a=F/(1+(2*h)/(np.pi*εr*F)*(np.log(np.pi*F/(2*h))+1.7726))**(1/2)
  return F,a
def Plane(θ,f,lb):
  fm=np.abs(f)
  z =dB(f/np.max(fm))
  fig = plt.figure()
  ax = fig.add_subplot(111, projection='polar')
  ax.set_theta_zero_location("N")  # 'N' = Norte (90°)
  ax.set_theta_direction(1)
  ax.plot(θ, z,label=lb)
  ax.grid(True)
  ax.set_rlabel_position(0)
  ax.set_rlim(-120, 0)
  ax.legend()
  plt.show()
def CircPatchDecrip(h,εr,fr):#h en cm
  kλ0=kλ(fr)
  k0=kλ0[1]
  CP=CircPatch(h,εr,fr)
  θ = np.linspace(-np.pi/2, np.pi/2, 50)
  E0=-1j*2*np.pi*fr
  J02=jn(0,k0*CP[0]*np.sin(θ))+jn(2,k0*CP[0]*np.sin(θ))
  j02=jn(0,k0*CP[0]*np.sin(θ))-jn(2,k0*CP[0]*np.sin(θ))
  E=1j*(k0*CP[0]*h*10**(-2)*E0*np.exp(-1j*k0*CP[1])/(2*CP[1]))
  Eθ1=E*j02
  Eθ2=E*np.cos(θ)*J02
  Plane(θ,Eθ1,"Plano-E")
  Plane(θ,Eθ2,"Plano-H")
  print('F= ',round(CP[0],3))#factor
  print('a= ',round(CP[1],3),'cm')#radio del parche

CircPatchDecrip(0.1588,2.2,10*10**9)#Ejemplo de aplicación

"""**Factor de calidad**

De manera análoga, se define una conductividad de radiación, la cual se calcula mediante la integral
\begin{equation}
    G_{rad}=\frac{(k_0a_e)^2}{480}\int_{0}^{\frac{\pi}{2}}({J'_{02}}^2+\cos^2\theta {J_{02}}^2)\sin\theta d\theta.
\end{equation}

Finalmente, se llega al factor de calidad que corresponde a un indicador representativo de las pérdidas en una antena. El factor de calidad total total $Q_t$ puede calcularse como una superposición de los recíprocos de ciertos factores de calidad debido a fenómenos específicos.
\begin{equation}
    \frac{1}{Q_t}=\frac{1}{Q_{rad}}+\frac{1}{Q_c}+\frac{1}{Q_d}+\frac{1}{Q_{sw}},
\end{equation}
En primer lugar, $Q_{rad}$ es el factor de calidad debido a las pérdidas de radiación presentes en el espacio de la onda, el cual viene dado por
\begin{equation}
    Q_{rad}=\frac{2\omega\varepsilon_r}{hG_l/l}K,
\end{equation}
donde $\omega$ es la frecuencia angular, cuya fórmula es
\begin{equation}
    \omega=2\pi f,
\end{equation}
$G_t/l$ es la conductancia total por unidad de longitud de la apertura de radición, matemáticamente
\begin{equation}
    G_t/l=\frac{G_{rad}}{W},
\end{equation}
y $K$ viene dado por
\begin{equation}
    K=\frac{L}{4}.
\end{equation}
Segundo, $Q_{c}$ es el factor de calidad debido a pérdidas óhmicas y puede obtenerse en función del la conductividad $\sigma$
\begin{equation}
    Q_c=h\sqrt{\pi f\mu\sigma}
\end{equation}
Tercero, $Q_d$ es el factor de calidad debido a pérdidas dieléctricas, el cual varía según la pérdida tangencial del material sustraído $\tan \delta$ mediente la expresión
\begin{equation}
    Q_d=\frac{1}{\tan \delta}.
\end{equation}
Por útimo, $Q_{sw}$ alude al factor de calidad debido a ondas de superficie que generalmente es un valor despreciable y se eliminan del modelo de cavidades.

La eficiencia de radiación se computa en términos del factor de calidad total y el factor de calidad debido a la radiación por
\begin{equation}
    e_{cdsw}=\frac{Q_t}{Q_{rad}}.
\end{equation}
"""

def QF(h,fr,tgδ,σ,εr):
  kλ0=kλ(fr)
  k0=kλ0[1]
  μ0=4*10**(-7)*np.pi# Permeabilidad del vacío (H/m)
  Qc=h*np.sqrt(np.pi*fr*μ0*σ)
  Qd=1/tgδ
  MSt=Rmstrip(εr,fr,h)
  CP=CircPatch(h,εr,fr)
  f=lambda x:(k0*CP[0])**2/480*((jn(0,k0*CP[0]*np.sin(x))-jn(2,k0*CP[0]*np.sin(x)))**2+np.cos(x)**2*(jn(0,k0*CP[0]*np.sin(x))+jn(2,k0*CP[0]*np.sin(x)))**2)*np.sin(x)
  Grad=integrate.quad(f,0,np.pi/2)
  Gl=Grad[0]*10**(9)/MSt[0]
  K=MSt[3]/4
  Qrad=(4*np.pi*fr*εr)/(h*Gl)*K
  Qt=(1/Qrad+1/Qc+1/Qd)**(-1)
  ecdsw=Qt/Qrad
  return Qc, Qd, Qrad, Qt, ecdsw
def QFDescrip(h,fr,tgδ,σ,εr):
  Q=QF(h,fr,tgδ,σ,εr)
  print('Qc= ',round(Q[0],3))#Factor de calidad debido a las pérdidas de conducción
  print('Qd=', round(Q[1],3))#Factor de calidad debido a las pérdidas de dieléctrico
  print('Qrad= ',round(Q[2],3))#Factor de calidad debido a la radiación
  print('Qt= ',round(Q[3],3))#Factor de calidad total
  print('ecdsw= ',round(Q[4],3))#Eficiencia de radiación

QFDescrip(0.127*10**(-2),1.6*10**9,0.0018,10**7,10.2)#Ejemplo de aplicación

"""**Ancho de banda**

El factor de calidad total también puede ser identificado mediante la relación de onda estacionaria de voltaje $VSWR$ según la relación del ancho de banda fraccional $\frac{\Delta F}{f_0}$
\begin{equation}
    \frac{\Delta f}{f_0}=\frac{VSWR-1}{Q_t\sqrt{VSWR}}
\end{equation}
Este cálculo resulta de vital importancia cuando se trabaja con un filtro pasabanda puesto que permite establecer las frecuencias de corte superior $f_2$ e inferior $f_!$, y así determinar el ancho de banda $BW$
\begin{equation}
    f_1=\frac{f_0}{\sqrt{1+\displaystyle\frac{1}{Q_t}}},
\end{equation}
\begin{equation}
    f_2=f_0\sqrt{1+\displaystyle\frac{1}{Q_t}},
\end{equation}
\begin{equation}
    BW=f_2-f_1\approx \frac{1}{\sqrt{\varepsilon_r}}.
\end{equation}
"""

def QBW(h,εr,f0,VSWR,pfreq):
  Qt=(VSWR-1)/(pfreq*np.sqrt(VSWR))
  rwL=1+1/Qt
  f1=f0/np.sqrt(rwL)
  f2=f0*np.sqrt(rwL)
  BW=f2-f1
  BWa=1/np.sqrt(εr)
  return Qt,f1,f2,BW,BWa,rwL
def QBWDecrip(h,εr,f0,VSWR,pfreq):
  QB=QBW(h,εr,f0,VSWR,pfreq)
  print('Qt= ',round(QB[0],2))#Factor de calidad total
  print('f1= ',round(QB[1]*10**(-9),3),'GHz')#Frecuencia de corte inferior
  print('f2= ',round(QB[2]*10**(-9),3),'GHz')#Frecuencia de corte superior
  print('BW= ',round(QB[3]*10**(-9),3),'GHz')#Ancho de banda
  print('BWa= ',round(QB[4],3),'GHz')#Ancho de banda aproximada
  print('L/W= ',round(QB[5],2))#Razón relativa entre longitudes

QBWDecrip(0.1588*10**(-2),2.2,10*10**9,2,0.05)#Ejemplo de aplicación

"""**Referencias**

[i] Balanis, C. (2005). *Antenna Theory Analysis and Design* (3ª ed.). John Wiley \& Sons, Inc

[ii] Hutira, F., Bezek, J., \& Bilik, V. (s. f.). *Design and Investigation of a Log-Periodic Antenna for DCS, PCS and UMTS Mobile Communications Bands*. HamWaves. Recuperado de https://hamwaves.com/lpda/doc/hutira.pdf
"""